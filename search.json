[{"title":"代码阅读笔记（一）","path":"/2024/10/14/代码阅读笔记（一）/","content":"b24c9c33b86bb0f7bfc01841e3aacc03bb5e407c3a39f0e9652610a575af7c9e821d9a27bd7343e0e3efcf9f4187b802804369801d5f46b5de192d8b84dbf59c6e15279fc9f84b85eb6693ee6711921f2d52f7e1fa7f2bb58a92430db34fe892e1f7e98f11d5a99e80693513a6ec03e0c8a9e6583598354a32da723494eab18017e2cb7faede7b85b4a60fb46a7fc723c3713787b0fb4b50995836fc441338c5f26daa97f3ae40ff2a27c4ba83bd9572b76c85f301924cfec0a658fe7c761ca0f6a20e1f1dcf3b64bbd8bf78058aef5dccb215ed89f181b67e6aa29df653913caa477fa6719254115fec2258849c6d62205827809a1ea155521172e43acb94bc6a088386af93d40eb5df9539be78f24dacda75efccd23231f854883f283698998a2d057ef4b563c02715d34a85603d113e7951781559b807f0b4f1317e8a319bef12fbe258318a7f81550a0c32ae92d20d743b46e5c8fec9a6f5bd2ec7d97e8c208722db9b41fde6f5eb874715cdce98ea3b659a237624422c499030f98003972e912e462a02714b837b4c020ba46dd1c4901db60e79c120f76b10a0acaa0cf4bf281aa8fe992dc53ad3d6dd2615e6bf32361ee7005b34cd801c1848018adb99d205aa159dc2bd3c7090d8c8d910e54ca41d0ab101df07a0d3dfe33732d751ed03c6ea31b997e4bef8eebff569122931884f98a388863cb22dc8ed4711a7547c54ed612774b209ab0406df1c067cc5261d90e8173f1a341b19fe5daceb939c260eb0859469319efcedc677bd47cedcf17d2a1f97e57ae76f186047fd230260cc1e95eb44888f06eb9fa25bb7a7875d3cd1a5362940e9d78a189a568838e928ae42d1fb58ae8997b5dcea49ca76cd3f7c83f09fc755dd2165e7056c11e4e2cf5e87198f598f02bb6fe08f108be2e90a4971227ae97d66ad646c57db4b45bd5429d69f17bf70a33e5692361d60066f8ca2dd8788d22557ecdeaf509bdecd57bb9dd37e47585b6c9a407a8c0034f970d46b5f08d3713b5551c0efd85f8cf2bc94811f5c4b6c2ad23cbe636396f87d4756a8b1c77e652c0860af72d9c4adc3bf12be25e203f2c90c558c731b97bff0c8520e92568dc6f9431c278afc721b99b5944a628f3afc427ab4c457164c6669a825db5d50d7d22464674fefb5a1bca99014776c5e172544a932b8da3798a7f50a3b8a807f8dacc5f42da592f0538c4bd4976d933fec0728f2da7144f9eb2631d15642be258d53aab7ec9d5a445ebfc29c87f5e9fe4dfa182a7af0d7038c33ebd6cfa9e95f640c8490a1a89eada73f79aca6a89f8ea922a1a8835d23e26bfb27ec2dea4846a792c684f1cf45b3f7d181d2dbbb441c728ea45086e755c385e5c819198acc0eb272e29812e39775a7d40cb8c2c8f36a1a58b367ee8198b969ef9efe1eb195e7994abea147e2e798aa762fba9a88df9ba4b58efcf8568ef79a1dbca0f1bdb2dd0ba74704c56ca386df2611e2f35153e73202d67eac7d4b99657c8c426232f43851f2dd731b47d6bea3254feb231ae27184d775765e941a019c2bbc3741d43e53f92b5f294babe9e124adeb067842f1264023d0b4eaf11e86f2a89d84019df504f75f6d811c95c84efc2f2c793df5b3b0ec10c25ded8f28216ef0262dc5ff93747a80bddd24fdb247718712966009ee025e73a943cdcbdef3067842a8a3a9a431e38eb7b0aa6f577ed1a13c3a892718efebf613a14569e9ee4c3bebafb01f004cebb7980c738f28f9bbeaa15d799f4881216a71d4a4d8d7f61eb1dc2cc3a3a67838a99660b82687c3bf6ebaf725518e29c08eb1f2066d7a4708ea077ac8993a948f4c235028101c509d6a2950e558a5846e8937acbbda05cfa4dfac68a6d7d9db508522300d17729d5d2dfb50d27e7ec879e064891728f2f6735c98f6898fbcfecd6942f46431055d4a895c54f22362b02a3261eb8be8cf930abccfc4bf2087ccc37440ab505163e4b84f2e68ecc8fe6e728c9ebc33548568f195dd32780b3c5bea87d5d9c0a91c386b0bff32244e75ee6f8dea49112102e1ac9faca0d4056359ce60426fc871cbb6d202e0402d63152470b99eaef2e535adf1f68757ab27b079342e2e888be73bce5da7bf9fd756955177ba923b6b02e22c3c645d8427c19ece4839021899a1582d430d6bea45f6d041c450d132d920b6397e07e60a95b491cd7f0f52ada20e601c703a038bd59101b4ba623041dfa745875f2edfc636806ee585d4ba4cec48ccfded20b0b9fd004c4b72ea623c45aae7335e2e17c992d4afee5826e2b44d8fa657e0bbe749b65bf7f574e31e7eae7955218d6c6189db8c4af3e20f49deb67d81a126e518efbc8a5f96e190a37251e36833844522094e98b3be6ab405fa85a4784aaeb0a1f75f8d7682739cef7f2464c9588038a80d3801e64f310f717c4818a6a80da1ced64defdaf4b559e009266d6bbb221475b515f3148b44c55fbf55acbdfdbc49bd2aa6b4352b7cd502fb124edd6c347d101e7d0d01b45c7d21329f0a909d2304baa8114eab5989faf6b926e3dec1a5130d4d432ecf3ad05d82cc04c7e3066a2247f5d3511e87b4c192e01942213a98f365512d652f4a7e0f853898e9bd04bb0f16601ba08d7cca9185c1406ccc76573937320fd146b5e9a13e1adb1316e43af53facf993871688cc8afb174d5a04fcf4a15838bac57732bb8e5497c36e07b4a6e2984574c0167da5054d4d2cffd2263bd1d93e2f4f9a84bd1af6ff40d122eaaff2e9b297db39b66cd416e9974def21b868581289b07fccc607a57fad0276f5cc3f6b5a6d52504599658c758bc6726e24d6a7a1aa0f20fd5f1bea97d2fa94c0b95b90577d4ba764a7cf0908dcfbbab195faca91aebee92bfd37f161360102036fac187d01b59c5cdbeff6570537a78c88e7d6b46faf486c41747210cf2453c8a08f17d32d9715d30b753d108a4fdd9cb8c003517529692c83dd2db0739ea78bbbb6d42d28d1fc025e0db771d8ec36d089ed0d574ef8aec5d81d5919cf0bac3343328b97cc178632831ac8c9cf05052f6166cf9ab74ab30a379dee920d3ef54c2ef26cde8d953b4fb5f6b90e74192a93efe83ddc456ad903707be7e4f5074943ce5426d8b38b9fd5b3fc4e67843a10c0d7df2cb9f658d39bfa646044ab3a0921f9d7f76c62df264dd50fd0ebd95f426ea693f8ff3e10afd6ac9c875954b8b54e5b3f8b63160872e7dd04029970fb4884678e23537c91ab645e4ce4c5eecbaaeca32cf150e9c08231f446de00357758d7614837f06c7ac67575ba20d861bc463aaf427fa128debb7fb2c9645a00debc9d3f8f7bf3a7ade3264f770203e7f936ee9bfeb4241ae7b06614b322c2b7ab917f63abe94026234f5e410a708ee08d02256f336339a153a689612bc8c47c198c59ca10f684ed4a61f8b67984975cd982423488dd53b57a91f2a5971a4787bb5ea549a2d2f6836b6921312fb6437acb72343588b0989a90acd8cf5e4b84522c854df86ecac9fed0c6e25b2f81f277739271cec43805db56a9daf8ad61a5da7bbab78c143d7752d33653917aa8230d697ff58952dca44375791f78f85aa258309f260d9de83fc0613d618e8259110c39320b7ca219d15d29c1955452dd4ffad38ed29350c6f24a9038efd9d74fd217a15e4ed618c3707bcd9871097128cf24cd76ca61e887364936d494e17b83dc75a5d260785bf80c45cec426867660d88ee651820a7af1bd25cd8fbb7162df7e546f29947cab251330434cf5daeed535aef48f10ce6578902f41063a59510e7bcbd8687db689a811e220eb8271f6aa86c668bada70ceed30ee73d0da82b4f3af587de30630b8ccf4a36a6101d878307b815c6120ee9193b83e866a42e97d59f00502693c589fc77b510e3b97c0368b4142c6cd54baa5dec55187f4df93b5e3031d094f3bcf58da6fabbf3050977f16b87f092bec31ed5086f1eea06fb8e6bdca2b416546d1e4c00e2219b6ee7744f63ec99f2d50a8830569f978dacd3c17bafc412a3f4ec78f35c7bbbf0abdb4720c974bcf57df7b58537b7eafd06325553b6f2b75172a5bcd09cebf1cb0fb7dbb98313521fb89fcd6938613d28b29d4edf9c7b657dd23e95defb4ecb16aaa9463230b6926c9d14217a4c4e2cd37f472ab69249f43b8a4256d6158fad2a831fe6f82625d6960eae50ee0c775626b35606fe4c289b44ed1f7e499701961905aeec8687b6e18c1966e10f2028f26ac156a788d7318ec8a7957b349ab9890d1f25bda26cdcf7b7ad5f811cbea283d169ef72fed6c99237b8329c8358debb1bcb4011dc5145fb6964ebe86090dbd4cda26b69d9c99b3c0ab27cb841a6fa41387526fe48188ee757e9f859844f83184637e34c6c1f4b2a9b3cdf67e47bd26cc24103d082984eb661b428334da1035fc231b27f4521e5fb0db73524ad5d1d6f28c269933a23edc06509851c817df47594d098f41ee19d5f664a5e19f21a9f082a0c87b0f6c2f48e8a38f4e53c5e4e001eb2b146f54f01f9ee68693ae42119918abee0c915d1ff6998c22bb11718e7b50d20fff2b71e01bca5e4fe737b48b659f6b0186706d604e38cc4384649e1f3a814a08152dce2ae8e333dfcaf4783ea9a44627c1c285eabc5ffac30af202a80a2cdd534b93c09ee285687ff41bc2d3ebc115a197d926f0c37db2e6eb6c59152618283efb4e4d2012c1f5263db80efe3981e67a4b99dddd22502162aaf4bb24e0ff84bb486a25e0e0039c78b5f3dd90fe Hey, password is required here.","tags":["笔记","Python","深度学习"]},{"title":"20241009日记","path":"/2024/10/09/20241009日记/","content":"正经人谁写日记最近都是凌晨三四点才能睡着，感觉被同化了。我想争取从晚睡晚起，进化到早睡晚起。 今天上的数理逻辑老师终于没有再念绕口令了，找到一个可以练习的网站（至今不会第三题，可能是英语水平有问题。。。，而且也没有答案）。edukera数理逻辑练习 阅读lora的论文，有点痛苦，知道核心是在干什么，但是其他部分读起来简直就是天书，可能是前置知识缺失得还是太多。动手深度学习那本书还在十分缓慢地进展当中，模型难以理解，不知道该怎么办。打算看看视频教程，看看其他人怎么理解的，先快速了解大概。 尺八也没有时间吹，唯一能练习的地点就是操场的看台，可是每次一有人经过我就不太敢吹出声因为太过羞耻。练习高音，那个频率又太高，感觉和操场上乱喊乱叫的小孩没有什么两样。当个棍子打人还不错。 说要去游泳说了一个月也没有去。感觉在失去健康。 9日晚于温度高达30°C的工位","tags":["日记"]},{"title":"安装Ubuntu时被系统玩弄的过程","path":"/2024/10/08/安装Ubuntu时被系统玩弄过程/","content":"累因为智慧交通的课上要用apollo平台来写课程作业，而平台又需要linux系统运行。虽然也可以用虚拟机在自己电脑里跑，但想到后面很多事情可能也会用到linux，索性决定在主机上安装一个ubuntu系统。 第一次被玩弄安装ubuntu可以参考官网的安装方式，说实话，简洁易懂，因为教程是在一个正常的，干净的电脑上安装的。按照它的步骤，我到了烧录iso文件到usb上的这一步。 不知道是我没仔细看文档，没人告诉我会把USB格式化清除原有数据！ 我惊出一身冷汗，害怕师兄的U盘上会不会有什么机密文件就这么被我给格式化了。还好师兄说没有关系，此为第一次被玩弄。 如果有人要烧录U盘，最好用个空的。。。。最好用自己的。。。。就算数据没丢，但是文件读取方式变了，怎么改文件系统都不知道。 在用 USB 烧录 Ubuntu 的 ISO 文件后，你可能会遇到以下两个常见问题： USB 在 Windows 上无法打开，提示文件系统不对或未格式化。 重新使用 USB 时需要格式化和清除数据。 这些问题通常是由于使用了特定的工具（如 Rufus、Etcher(没错就是你)、UNetbootin 等）将 Ubuntu 的 ISO 文件烧录到 USB 上时，修改了 USB 的分区表和文件系统导致的。为了更好地理解这些现象，我们需要先了解在 Linux 发行版 ISO 烧录过程中 USB 是如何被处理的。 问题原因分析1. 烧录过程如何修改了 USB 的分区表和文件系统？在创建 Ubuntu 启动盘时，烧录工具通常会对 USB 进行以下操作： 直接写入 ISO 镜像内容： 烧录工具并不是简单地将 ISO 文件拷贝到 USB 中，而是会将 ISO 镜像的底层文件系统结构、启动扇区（boot sector）以及分区信息直接写入到 USB。这样一来，USB 就被改造成了一个类似光盘格式的设备。 创建混合分区（Hybrid Partition Table）： 大部分 Linux ISO 文件在制作时采用了混合分区结构（Hybrid Partition）。混合分区表包含了 GPT 和 MBR 两种分区表，允许该 USB 在 BIOS 和 UEFI 两种启动模式下都可以被识别和启动。 修改文件系统格式： 通常的 USB 设备在 Windows 下默认使用的文件系统是 FAT32 或 exFAT。而 Linux 发行版的 ISO 文件内部使用了不同的文件系统，比如 ISO9660、SquashFS 或 ext4。当把这些文件系统直接写入到 USB 时，原先的 FAT32 文件系统就会被覆盖掉，导致 USB 在 Windows 系统上无法识别。 由于 Windows 系统无法识别 ISO9660 或 SquashFS 这样的 Linux 文件系统，因此你会看到 USB 显示为“文件系统不对”或“需要格式化”。 2. 为什么 Windows 无法识别烧录后的 USB ？这是由于在写入 Ubuntu ISO 时，USB 的分区表和文件系统被改变。Windows 默认只能识别 FAT32、NTFS、exFAT 等常见文件系统，而 Ubuntu 的启动盘可能会使用 ISO9660 或混合文件系统，这些文件系统在 Windows 下无法识别。因此，当你尝试在 Windows 中打开 USB 时，会看到以下几种情况： 未分配分区或无效文件系统： Windows 可能显示 USB 为“RAW”格式，表示 Windows 无法识别该文件系统。 提示需要格式化： 这是因为 Windows 认为该 USB 中的文件系统不符合 FAT32 或 NTFS 格式，所以无法访问。 分区表错误或显示多个分区： 由于混合分区表的存在，Windows 可能只能识别其中一个分区（通常是 EFI 分区），其余分区显示为未分配或无效。 3. 为什么重新使用 USB 时需要格式化？由于 Ubuntu 烧录工具更改了 USB 的分区表和文件系统格式，所以如果你想将 USB 恢复为普通存储设备，必须执行以下操作： 删除所有分区并重新创建： 恢复 USB 的分区表和结构，使其回到 FAT32 或 exFAT 格式。 重新格式化： 创建新的文件系统，以便 Windows 和其他操作系统能够识别和使用。 第二次被玩弄按照步骤，我现在应该把它插入pc，启动boot，选择usb，美美安装系统。 一切很顺利，直到安装ubuntu的第三步，选完系统语言那一步。 告诉我：此计算机使用了英特尔RST(快速存储技术)，我需要在windows中关闭。 没错，这台主机之前是windows的，而且我不知道上一个用户的密码。 此为第二次被玩弄。 在安装 Ubuntu（或其他 Linux 发行版）时，如果计算机的 BIOS 或 UEFI 中启用了 Intel 的快速存储技术（Intel Rapid Storage Technology, RST），则可能导致安装程序无法识别到硬盘。这是因为 RST 提供了一种复杂的 RAID 管理模式，而默认的 Linux 内核通常不支持这种模式。这会导致在安装 Linux 时出现以下问题： 硬盘无法被识别： 当 RST 启用时，Ubuntu 安装程序（或者其他 Linux 发行版）可能无法正确识别硬盘，导致在安装过程中找不到任何硬盘或分区。 磁盘分区访问异常： 即使能看到硬盘，有时分区表和分区信息也会被扭曲，出现不可读的状态，导致无法对分区进行操作（如格式化、安装引导程序等）。 与 Windows 共存的双系统可能出错： 如果打算安装双系统，启用 RST 会导致 Ubuntu 与 Windows 共享硬盘时可能发生读写冲突。即使能成功安装，Ubuntu 也可能无法正确访问 Windows 的分区或数据。 为什么会发生这种情况？RST 是 Intel 为提升磁盘性能和数据安全性而推出的一种 RAID 模式。当启用 RST 时，BIOS 或 UEFI 会将硬盘控制权交给 RST 驱动程序。这样一来，操作系统看到的硬盘是经过 RST 中间层处理后的，而不是传统意义上的硬盘。Windows 有内置的 RST 驱动程序，所以能够正常工作，但大部分 Linux 发行版在默认情况下不具备对 RST 驱动的支持，因此无法正确识别经过 RST 处理的硬盘。 第三次被玩弄师兄说可以把windows密码先改了，于是又去借了个U盘去下载另一个系统（再次感谢师兄的耐心）。 问题来了，重新登陆windows时，没有办法切换用户，并且改了密码也进不去。 此为第三次被玩弄。 第四次被玩弄师兄说直接把windows给消灭了吧，于是就把windows系统给删掉了。 drama来了，当我又回到了安装ubuntu的第三步时，还是提醒我RST没有关闭。 即便 Windows 已被移除，只要 BIOS 中的 RST 功能仍然处于启用状态，安装程序就会检测到这个问题并阻止安装。 第五次被玩弄那让我们返回BIOS里。由于只浅浅瞟了一眼网上的教程，把将 SATA 模式直接改成了null（如果我没有记错）。 终于没有RST关闭的提示了！但是在磁盘分区的时候，发现系统好像被安装在了U盘上而非主机磁盘上。 此为第五次被玩弄。 将 SATA 模式改为 null 可能导致 BIOS 无法正确识别硬盘，从而让 Ubuntu 安装程序只能找到 USB 驱动器进行安装。 第六次被玩弄事已至此，不如问问GPT吧。 原来应该把SATA模式改为AHCI。终于成功安装了Ubuntu！ 在 AHCI 模式下，Linux 对 SATA 硬盘的支持更加广泛和稳定。许多 Linux 发行版在默认情况下能够更好地识别和管理 AHCI 设备。 然后发现之前踩过的所有坑，GPT都给我回答了一遍。 成功后的教训早点问GPT！","tags":["小技巧","Linux"]},{"title":"apollo自动驾驶学习笔记（一）","path":"/2024/10/07/applo自动驾驶1/","content":"这里是智慧交通课程的笔记，但不是课堂笔记，因为我会翘课。又因为期末的课程报告要用到百度的apollo平台，所以直接听的是平台的课。 电脑配置 4核以上cpu 16G以上内存 安装Ubuntu 18.04+系统 技术工具 实时框架：Cyber RT 决策与规划：Dreamview / Dreamland 感知：Dreamview / Visualizer CyberRT？CyberRT是车端工程框架的基础。 了解分布式系统开发 了解三种通信模式 了解系统开发调试工具 停！第一个大坎来了虽然我电脑上有虚拟机可以装ubuntu，但是还是想把实验室配的主机整成linux系统的。所以我需要一个u盘。 等待u盘……..ok借到了师兄的 下载操作系统 安装 安装记录： step1: 把ubuntu的iso文件下载到本地 step2: 把https://etcher.balena.io/#download-etcherz这个软件下载了 step3：用上面这个软件把iso文件转换到u盘上去 从这里开始，漫长的装系统过程以及有些drama的操作会在另一篇博客里说明。 熬夜装成功系统之后，终于可以开始了。","tags":["笔记","自动驾驶"]},{"title":"国庆假期体感结束了","path":"/2024/10/05/国庆假期体感结束了/","content":"​ 没错，今天终于和朋友出去吃饭看电影k歌，进行了国庆的第一次娱乐活动，但感觉也是最后一次，因为只有两天的假期留给我了，而我依旧不知道该干什么。看到实验室的师兄今天都回来了，有些怀念放假前两天实验室几乎没有人的时候，我甚至可以坐在椅子上满实验室滑着跑（但我真的没有付诸实践）。 早上出去玩之前来实验室给草浇水，走廊上碰到了师兄（到底是哪位师兄我现在还在待定）但我没打招呼。。。。。。那一时刻我光想着出去玩的事情，忘记开启人脸识别功能。之后只在大脑里留下了淡淡的印象。。。。。。所以到底是哪位师兄。。。。。。真的很对不起。。。。如果真的有人在关注我的博客的话。。。真的很对不起。。。。。。鞠躬91°。。。。。。 这两天趁着实验室没人给我的竹子晒了晒太阳，结果给晒多了有些黄尖。。。。感觉只要我离开两天这竹子就要完蛋。过年的那两周该怎么办呢？听说导师就住旁边家属院，托付给导师（妄想时刻但我觉得这个要求很合理）？ 先这样吧，这个博客真的是技术笔记一篇都没咋写，乱七八糟的事情先写了一堆。 10.5晚于工位","tags":["随笔"]},{"title":"plantuml和gpt结合快速画图技巧","path":"/2024/10/01/plantuml和gpt结合快速画图/","content":"节省画图的时间——plantuml和gpt结合最近不是在写各种文档嘛。需求，总体以及详细设计里总是缺少不了各种图表。作为一个特别爱偷懒的东西，怎么能不好好利用一下Chatgpt呢？之前手动地去画图表，拖来拖去，自己又排版得不尽如人意，修改一个地方可能要连着一大片都要重新去画。当然，我们不能让gpt直接去给我们画一张图出来，我们需要一个介质语言——plantuml——这是一个非常灵活好用的工具，可以通过简单的语法描述去创建各种各样的图表。这里是这个工具的语言使用指南：plantuml语法手册，我们可以参照这些，尝试去画一些简单的图。 使用工具好的，接下来让我们列出需要用到的工具： Chatgpt（或者其他AI小助手都可以，Kimi也还不错，通义千问也还行，不过都是我Chatgpt崩掉时的备用品） 直接打开plantuml的在线服务器就好——快速开始plantuml在线服务器 别忘了你的脑子——别想着什么事都交给gpt去做哦~ 我们打开在线服务器快速开始plantuml在线服务器，可以看到我们的界面： 没错，这就是我们的第一个例子！非常简单的界面，上面输入内容，下面就会自动生成我们需要的图表！（箭头我写错了不好意思） 具体的语法文档查看plantuml语法手册就可以了！我认为里面已经讲得非常非常详细了。接下来我们用它和chatgpt来帮我们画图。 提示词写法提示词很简单，以下是我经常用的格式： 我现在正在写软件其中一个模块的总体设计文档（说明自己的使用场景），我的这个模块包含以下几个子模块;blablabla……这些子模块是这样交互的，这个模块和这个模块这样。。。那个模块和那个模块那样。。。。，我现在需要你帮我用plantuml，画出这些子模块之间的时序图/模块图。 当然你也不用这么麻烦，如果你之前已经跟gpt把整体的流程打磨核对得差不多了，它已经有相关记忆了，你也可以直接问它要： 我现在需要这个模块的流程图，请你用plantuml的语法格式给我画一份流程图。 由于项目的特殊性，问的时候尽量规避掉敏感词，可以用视频中的音频去替换，总之处理流程大体差不多，谁知道隐私泄露会不会有问题呢 下面演示一下： 这个时候chatgpt会详细得返回一段代码： 给这段代码复制粘贴到我们的plantuml在线服务器上，便可以直接画出图来！ 如果你觉得不满意，可以再让gpt生成一份，但要明确指出你哪不满意。 如果你觉得这样的图不错，你也可以继续在上面这个界面修改文字，细化一些细节，或者更改图标的主题。 最后你可以将画好的图导出成PNG或者SVG，非常方便！一分钱不花！还没有水印！ 如果你之前和gpt已经聊过你要写的那个模块的内容并且帮助gpt理清了逻辑，那么你可能会得到更好的，更细节的图，比如下面这样： 画完了之后可以再参照plantuml的文档，可以加一些自己想加的东西进去，比如note便利贴之类的让图表功能更清楚。 总之，别只让gpt给你写！自己要先理清楚逻辑，你才能知道gpt画的图哪里出了问题！自己一定也要动脑子！","tags":["小技巧"]},{"title":"如果科研楼被丧尸包围了怎么办","path":"/2024/09/30/如果科研楼出现了丧尸怎么办/","content":"怎么办丧尸病毒是从地下车库被带进来的，经过一个月的严密防御，学校还是没有抵御住丧尸的攻击。而当时因为科研楼的大门还没有打开，于是熬夜写本子的我在实验室睡了一晚上，逃过了一劫。 当我醒来时，实验室好像不止我一个人熬大夜，灯已经亮了，好像外面传来了警报声。 出什么事情了？难道是？ 没错，当我跑到窗子前朝楼下看时，科研楼已经被密密麻麻的丧尸群包围——学校已经沦陷了。大家都很惊慌。实验室的门还没有打开，不知道丧尸有没有已经进入到楼里来。 物资清理：科研楼只有一楼有自动贩卖机和一台自动咖啡机，但鉴于在科研楼熬大夜的人有很多，所以这点物资根本不够。 但是好处是，科研楼距离两个食堂都非常近，但肯定已经都沦陷了，食物可能是一些蔬菜肉类，可能需要放手一搏才能获取。接下来就是超市，超市也距离不远，得想想办法怎样过去。 好处是通信和电力暂时没有断掉。楼里设备种类很齐全，和外界通信暂时不成问题。 手里有什么武器呢？感觉说得过去的也只有厕所的拖把能当棍子一用，刀具这类东西几乎没有。但是我认为可以创造武器。科研楼不缺电脑，所以不缺电脑键盘。那种黑色的传统键盘很耐砸，可惜就是太短了，攻击丧尸能力有限，还不如拖把。这时我瞄到了门口的钢架。这个可以拆了充当棍棒，隔间里的桌子腿也可以被拆掉，上面绑上利物，可以当个砍刀砍一砍丧尸。 目测楼下的丧尸活动能力还没有进化到像韩国丧尸那样能跑，所以我认为，实验室的一堆人体工学椅应该能在适当的时间派上用场，比如坐着它滑着跑，也可以用来运输物资。 而且我相信楼里那么多研究生，肯定有脑子灵光的，领导我们杀出去！而且我认为，隔壁的组好像有监视学生工作的摄像头也可以重新安装在一些安全死角，防止丧尸从不知道什么地方钻进来。 所以目前的整理如下： 我们首要考虑的是资源分配与安全防线的建立。 一、物资管理与获取策略 现有物资清点 自动贩卖机与咖啡机：由于一楼是目前唯一的补给点，我们必须立即组织一组人手进行物资清点，并将所有可用物资搬运到更安全的楼层（例如三楼或四楼）。这样做能防止万一一楼被突破时失去所有补给。 实验室的储备物资：考虑到科研楼内常年有学生在通宵，我们可以检查各个实验室是否有额外储备的泡面、饼干、零食以及咖啡等。同时，各种清洁剂（如酒精、漂白水）可以用于基本的消毒防御。 水源：科研楼内的饮水机和卫生间的水源暂时可用。 外部物资获取计划 虽然食堂和超市距离较近，但都已经被丧尸占据。我们必须小心设计一次小规模、快速的物资获取行动。 小队配置：选取身体素质较好、心理承受能力强的研究生组成小队，同时在楼内监控所有通道，保证行动的可见性。 滑动椅的妙用：利用科研楼的滑轮椅和实验用的防护服，将人员快速滑到目标地点，规避与丧尸的直接接触。每人随身携带一把钢架棍或桌腿改装的武器，避免深陷战斗，行动的核心是“速取速回”。 物资补给路线 设定安全区域：明确几个物资补给与暂存的安全区域（如楼梯口或楼道两端），这些地方应该有临时的简易防线（可用桌椅、柜子等堆积），以确保运送途中有足够的保护。 安排轮流守卫与巡逻，避免丧尸突然攻入。 二、武器改造与防御策略 简易武器改造 拖把与钢架棍：将拖把的头去掉，改造成长棍武器，同时用钢丝或实验室的强力胶带将钢架棍的一端缠绕利物（如实验室用的小刀、剪刀等），变成带刃的劈砍武器。 人体工学椅盾牌：将人体工学椅的靠背拆下，并加装在一条长棍上，作为简易盾牌。靠背的坚硬材质可以抵挡普通丧尸的抓咬，配合长棍使用，可以形成远距离的防御武器。 实验室设备改造 电子设备应用：一些高功率的激光器或者高压电装置（如示波器改造的电击器）可以对丧尸产生短暂的击退效果，但要小心使用，避免引发火灾或设备过载。 三、科研楼内部防线的建立 封锁通道 我们必须第一时间封锁所有可以被丧尸轻易进入的楼层通道，如一楼的门窗、通风管道和紧急通道。用实验室的钢架和木板将一楼的窗户完全封死，并设置监听装置（如用摄像头或声音监测设备）以实时监控楼内动态。 将楼梯间的几个关键拐角用桌子和柜子堆积，形成多重障碍，减缓丧尸的行动速度。 建立临时避难所 科研楼的楼层较多，可以在顶楼建立一个临时避难所，用作遇到紧急情况时的最后撤离点。避难所应配备一定量的食物、水源和基本防御武器，并定期更新物资。 信号与信息传递 楼内的研究人员可以利用手头的设备（如旧手机、电脑、对讲机）组建一个简易内部通信系统，确保信息流通畅通。 监控摄像头改造：将实验室组装好的摄像头重新布置在楼梯口和走廊的各个死角，配合多余的笔记本电脑形成一个简单的监控网络。这样可以让楼内所有人都能看到实时的丧尸动向，并根据情况调整防御策略。 四、与外界的求生策略 信息传递 我们需要明确外界是否有救援行动正在进行。利用当前稳定的通信条件，设法联系外界的援助力量（如政府、军队）并报告我们的困境。 如果救援无望，我们需要提前制定出撤离计划，并寻找其他生还者共同行动。 信号传递与求援 利用科研楼的屋顶建立一个求救信号，如通过大型反光材料拼成“SOS”字样，或者用发电机制作定向的信号灯，增加被发现的几率。 组装无人机：科研楼内可能有一些无人机或电子元器件，我们可以尝试组装无人机，利用它在周围探测丧尸分布，并寻找可行的逃生路线。 五、组织内部管理与分工 人员分组 依照每个人的专长（如化学（北邮好像有搞材料的？）、物理、计算机）进行分组：化学组负责改造防御品，物理组负责制造简易武器，计算机组维护内部监控系统。 轮班制管理，保证每个时间段都有足够的警戒人员和后勤人员负责物资管理。 心理疏导 被困在楼内的研究生和老师们情绪很容易崩溃，因此需要设立一个小型的“心理支援小组”，定期开展简单的心理疏导活动（如交流、谈心），避免内部矛盾激化。 （未完待续）","tags":["乱写"]},{"title":"国庆前夜碎碎念","path":"/2024/09/30/国庆前夜随笔/","content":"实在是不知道干什么了，写完本子的总体设计身体仿佛被抽空，虽然说是让gpt帮着组织的，可感觉活一点没少干，理清楚模块之间的关系还要认认真真讲给gpt听，让它在适当的地方扩充我确实不知道的内容，每生成一遍都要仔细读一遍，看看哪里还有逻辑漏洞，再反复给gpt纠错。。。感觉这些步骤下来时间和纯粹让我自己写的时间都差不多了。于是今天继续来工位陪伴我的电脑，地平线玩不动了开始继续黑神话，今天也算是过了两个boss，看着都有些恶心。打完也筋疲力尽，于是趴在工位上睡觉。但是又睡得脸疼，于是决定继续起来写详细设计。。。。。可是好难写。。。。虽然可以用chatgpt可是也不能让它给我胡乱设计接口。于是感到空虚。不过地平线的一些古典音乐电台确实不错。 给小竹子喷了营养液，希望能长得更绿一些！ 记得昨晚和室友讨论感情经历，细细分析一番发现自己的抽象程度超乎想象，很可惜已经找不到过去的勇气了（太癫了），不如一切随缘。 所以国庆要去干什么呢？继续坐在工位上发呆吗？ 可是又不想去景点扎堆，朋友也还要跑实验出不来，只能最后两天一起出来转转。 想起来大一的时候前ny还从浙江跑到北京来陪我玩，竟然已经是五年前的事情了，十一之后就再也没见过了，异地见不到面，再加上是疫情，这段感情就迅速褪色，夸张一点说，具体长什么样可能都记不清了。 师兄给了一个大芒果，这个芒果有很重的奶油味，感觉能吃两顿。 还是感觉哪里有电脑哪里就有归属感，我爱我的工位！","tags":["随笔"]},{"title":"知识收集单","path":"/2024/09/29/每日知识/","content":"双流特征映射分析（Two-Stream Feature Mapping Analysis）双流特征映射分析（Two-Stream Feature Mapping Analysis）是视频理解和分析中的一种方法，主要用于动作识别等任务。这个方法的核心思想是通过两个独立的流（通常是一个空间流和一个时间流）来捕捉和处理视频中的信息。下面是这种方法的一些关键点： 空间流（Spatial Stream）：空间流处理视频中的静态帧信息。它通常使用卷积神经网络（CNN）来提取每一帧中的空间特征，类似于处理单个图像的方式。这个流关注视频的外观信息，例如物体的形状、颜色和纹理。 时间流（Temporal Stream）：时间流处理视频中的动态信息，通常利用光流（optical flow）来捕捉帧与帧之间的运动信息。光流是一种用于描述图像序列中物体运动的矢量场，通过计算相邻帧之间的像素运动来获取。这一流关注的是视频中的运动信息和动态变化。 特征融合：在双流特征映射分析中，来自空间流和时间流的特征通常会在某个阶段进行融合，以综合利用静态和动态信息。融合的方法有多种，可以是简单的特征拼接，也可以是通过更复杂的网络结构来进行融合。 优势：双流方法能够更全面地捕捉视频中的信息，因为它同时考虑了空间（静态）和时间（动态）两方面的特征。这使得它在处理视频行为识别等任务时具有较高的准确性。 应用：这种方法被广泛应用于视频行为识别、动作检测和视频分类等领域。双流卷积神经网络（Two-Stream CNN）是最经典的实现方式之一，并在许多基准数据集上取得了显著的效果。 例子例如，在动作识别任务中，空间流可能会检测到一个人在某一帧中的姿势和背景，而时间流则会捕捉到这个人在视频中是如何移动的。这两种信息结合起来，可以更准确地识别出这个人正在做什么动作（例如跳跃、跑步等）。 双流网络的典型架构 输入数据：原始视频帧（空间流）和对应的光流图（时间流）。 特征提取：通过两个独立的CNN分别提取空间和时间特征。 特征融合：将提取的空间和时间特征进行融合，通常在全连接层进行。 分类器：使用融合后的特征进行分类，输出最终的识别结果。 总之，双流特征映射分析是一种有效的技术，通过分别捕捉和处理视频中的静态和动态信息，实现对复杂视频内容的深入理解。 20240619 查看论文《Deep Neural Networks in Video Human Action Recognition: A Review》获得 多流分析（Multi-Stream Analysis）多流分析（Multi-Stream Analysis）是视频理解和分析中的一种方法，通过多个独立的流来捕捉和处理视频中的信息。这些流可以代表不同类型的数据或特征，从而提供对视频内容更全面的理解。与双流分析类似，多流分析扩展了双流分析的概念，通过引入更多的流来处理更加复杂和多样化的信息。 多流分析的关键概念 多个特征流：多流分析使用多个独立的流，每个流负责处理特定类型的信息。这些流可能包括： 空间流（Spatial Stream）：处理视频中的静态帧信息，如物体的外观和场景。 时间流（Temporal Stream）：处理视频中的动态信息，如物体的运动。 深度流（Depth Stream）：处理视频中的深度信息，用于捕捉物体的三维结构。 音频流（Audio Stream）：处理视频中的音频信息，用于捕捉声音特征。 光流流（Optical Flow Stream）：处理相邻帧之间的光流信息，用于捕捉运动特征。 特征提取：每个流都有独立的特征提取网络，例如卷积神经网络（CNN），用于提取特定类型的数据特征。 特征融合：来自不同流的特征通常会在某个阶段进行融合，以综合利用多种信息。融合的方法可以是简单的特征拼接、加权平均，也可以是通过更复杂的神经网络结构进行融合。 分类器：使用融合后的特征进行分类或其他任务的预测，输出最终的结果。 多流分析的优势 全面性：通过多个流处理不同类型的信息，多流分析能够提供更全面的特征表示，从而提高对复杂视频内容的理解。 鲁棒性：不同流的信息可以互补，某个流的噪声或缺陷可以被其他流的信息补偿，提高整体系统的鲁棒性。 灵活性：可以根据具体应用需求，选择和设计不同的流来处理特定类型的数据。 应用多流分析被广泛应用于各种视频理解任务，如： 动作识别：结合空间流、时间流和光流流，可以更准确地识别视频中的人类动作。 视频分类：通过综合视频中的视觉、音频和文本信息，可以更准确地对视频进行分类。 行为检测：通过多流分析，可以更精确地检测视频中的特定行为，如安全监控中的异常行为检测。 例子在一个多流分析的系统中，可能会有以下几个流： 空间流：使用CNN提取每一帧的静态特征。 时间流：使用3D CNN或RNN处理视频帧序列的时间特征。 光流流：计算相邻帧之间的光流，提取运动特征。 音频流：使用音频处理网络提取音频特征。 这些流的特征通过一个融合层进行组合，然后输入到一个分类器中，最终输出视频的分类结果或行为识别结果。 多流分析通过结合多个独立流的信息，能够更全面和精确地分析和理解视频内容，因此在视频处理和计算机视觉领域具有广泛的应用前景。 20240619 查看论文《Deep Neural Networks in Video Human Action Recognition: A Review》获得 不精确与不准确不精确的监督：指的是标注数据可能存在一定程度的模糊或不明确，即使标注者尽了最大努力，也无法完全准确地标注每个数据点。例如，在视频分析中，可能存在某些帧或动作片段的边界不明确，或者不同标注者对相同数据有不同的理解和标注方式。 不准确的监督：强调的是标注数据与实际真相不完全一致的情况。这可能是由于标注者的主观判断或者在标注过程中出现的误差。例如，在人类动作识别中，一个动作被错误地标注为另一个相似的动作，或者标注者因为技术能力或知识水平的限制而无法准确理解和标注数据。 对比学习（Contrastive learning）对比学习（Contrastive learning）是一种深度学习方法，其基本思想是通过比较不同数据样本之间的相似性和差异性来学习数据的表示或特征。它通常应用于无监督或半监督学习中，尤其在数据标注成本高昂或标签数据稀缺的情况下表现出色。 具体来说，对比学习的核心思想是通过使相同类别的样本在特征空间中尽可能靠近，而不同类别的样本尽可能远离来学习有意义的特征表示。这种方法通常通过最大化同类别样本之间的相似性（类内距离），同时最小化不同类别样本之间的相似性（类间距离）来实现。通过这种方式，模型可以学习到更加鲁棒和通用的特征表示，从而在各种任务中表现更好，例如图像分类、语音识别、视频分析等。 对比学习的应用范围广泛，包括但不限于： 视频动作识别：通过比较视频中不同帧之间的动作来学习动作的时空特征。 图像检索：学习如何比较图像之间的相似性，以便于检索相似图像。 自监督学习：在没有显式标签的情况下学习数据的表征，例如通过图像增强方法生成正负样本对进行对比学习。 最近，对比学习在深度学习领域得到了广泛关注和研究，特别是随着大规模数据集和强大的计算能力的普及，对比学习方法在提升模型泛化能力和效果上展现出了很大的潜力。 20240619 查看论文《Deep Neural Networks in Video Human Action Recognition: A Review》获得 Epoch在深度学习中，epoch（纪元）是一个非常重要的概念，它表示整个训练数据集通过神经网络一次的过程。理解 epoch 对于掌握深度学习模型的训练过程至关重要。 什么是 Epoch？在训练深度学习模型时，通常会将整个数据集多次传递通过模型，每次传递称为一个 epoch。每个 epoch 包含了以下步骤： 前向传播（Forward Pass）：将训练数据输入模型，计算预测输出。 损失计算（Loss Calculation）：将模型的预测输出与实际标签进行比较，计算损失值。 反向传播（Backward Pass）：计算损失值相对于模型参数的梯度。 参数更新（Parameter Update）：使用优化算法（如梯度下降）更新模型参数，以减少损失。 一个 Epoch 的过程假设你有一个包含 1000 张图像的训练数据集。在一个 epoch 中，神经网络将会遍历这 1000 张图像一次。这意味着每张图像都会被输入模型一次，并且模型的参数会根据这些图像的损失进行更新。 Batch 和 Iteration在实际操作中，由于计算资源的限制，通常不会在每个 epoch 中一次性处理整个数据集。相反，数据集会被分成多个小块，每个小块称为一个 batch。每处理一个 batch 数据，就称为一个 iteration（迭代）。一个 epoch 包含多个 iteration，具体数量取决于 batch 的大小和数据集的大小。 例如，假设你有 1000 张图像，将 batch 大小设置为 100，那么： 一个 epoch 包含 10 个 batch。 每个 epoch 将进行 10 次 iteration。 伪代码示例以下是一个简化的伪代码示例，说明一个 epoch 的训练过程： 1234567891011121314for epoch in range(num_epochs): # 遍历所有的 epoch for batch in data_loader: # 遍历一个 epoch 中的所有 batch inputs, labels = batch # 获取一个 batch 的输入数据和标签 # 前向传播 outputs = model(inputs) loss = loss_function(outputs, labels) # 反向传播和参数更新 optimizer.zero_grad() # 清空之前的梯度 loss.backward() # 计算当前 batch 的梯度 optimizer.step() # 更新模型参数 print(f&#x27;Epoch &#123;epoch+1&#125;/&#123;num_epochs&#125;, Loss: &#123;loss.item()&#125;&#x27;) 在这个示例中，num_epochs 表示要训练的总 epoch 数。data_loader 是一个迭代器，按 batch 大小提供数据。model 是你要训练的神经网络模型，loss_function 是计算损失的函数，optimizer 是用于更新模型参数的优化器。 为什么需要多个 Epoch？单次通过整个数据集（一个 epoch）通常不足以使模型充分学习到数据的特征和模式。通过多个 epoch，模型可以逐渐调整参数，使其在训练数据上的表现越来越好。随着 epoch 的增加，模型的损失通常会逐渐减小，准确率会逐渐提高。 早停（Early Stopping）需要注意的是，过多的 epoch 可能导致过拟合（overfitting），即模型在训练数据上表现很好，但在验证或测试数据上表现不佳。为了解决这个问题，通常会使用 早停（early stopping）技巧，当验证集的性能不再提升时，提前停止训练。 总结epoch 是深度学习训练过程中的一个重要概念，它表示整个训练数据集通过模型一次的过程。通过多个 epoch 的训练，模型逐步调整参数，以更好地拟合数据。在实际训练中，epoch 与 batch、iteration 紧密相关，通过合理设置这些参数，可以有效地训练模型并避免过拟合。 20240624学习pytorch时遇到的专有名词 没有免费午餐定理（No Free Lunch Theorem，NFL）没有免费午餐定理（No Free Lunch Theorem，NFL）是由Wolpert和Macerday 在最优化理论中提出的．没有免费午餐定理证明：对于基于迭代的最优化 算法，不存在某种算法对所有问题（有限的搜索空间内）都有效．如果一个算法 对某些问题有效，那么它一定在另外一些问题上比纯随机搜索算法更差．也就是 说，不能脱离具体问题来谈论算法的优劣，任何算法都有局限性．必须要“具体问 题具体分析”． 没有免费午餐定理对于机器学习算法也同样适用．不存在一种机器学习算 法适合于任何领域或任务．如果有人宣称自己的模型在所有问题上都好于其他 模型，那么他肯定是在吹牛． 20240625 《神经网络与深度学习》摘抄 The paper is summarized by drawing some general conclusions, identifying open research challenges and by pointing out future research directions."},{"title":"20240929日记","path":"/2024/09/29/20240929日记/","content":"z 终于要放假了。 测试 测试 测试 $$y=x^2$$ 12345int i;for(int j;j=nlj++)&#123;\tprintf(&quot;哈哈哈哈哈哈哈哈哈&quot;);&#125; 引用的部分","tags":["日记"]},{"title":"钓鱼人","path":"/2024/09/29/钓鱼者/","content":"钓鱼人 不要和钓鱼的人说话。 老师坐在我面前，头也不抬一下，重复了和前几次一样的回答。我不是第一次去找她，请求她审核通过我的报告，每一次获得的都是让我更换老师之类的答复。 我从未与老师起过争执，由于消息太频繁忘记了回老师消息,确实是我自己的问题，我也十分真诚甚至低声下气地向老师道了歉。但随着去的次数变多，我就感觉十分地不对劲，她委婉的回答似乎掺杂了许多不屑与阴阳怪气，希望是我自己想多了，但这件事情已经让我抑郁了许久，感觉自己憋进了一个圈，错全然是在我自己，然而我确找不到解决它的办法，看起来像是机会的机会都是死路，我似乎在承受着与我的错误不对等的惩罚。 秋天的北京异常寒冷，让本就有些精神萎靡不振的我后背一阵刺痛，身体本能对寒冷的应激反应让我一阵干呕，却什么都吐不出来。 我决定出去转一转缓解一下压力。 我一般喜欢去通惠河的南岸走一走，有水的地方总能让我感到舒适。今天是个难得的晴天，希望散步能让我感觉好一些。 我喜欢站在桥上往下看河里的水草，细长绵延不断，密密麻麻铺满了河底，在蓝天的映照下河水显得十分清澈。河两岸有许多钓鱼的人，每走几步就能碰见一个，他们坐在那里，执着鱼竿，一动不动地盯着水面等鱼上钩。不过我来这里散步那么多次，从来没见过有人真正钓上过鱼，他们的桶里似乎空无一物，有些连水都没有。 我想这些人钓鱼大概是为了消遣吧，并不是真正的要鱼上钩。一想到这里，我便有一点向往这种无聊悠闲的钓鱼生活。 边幻想着自己的退休生活，看到路面有一块小石头便只想一脚踢飞它。但是，好巧不巧，石子直接飞到了在下面钓鱼的一个光头男人头上。我一惊，感到十分抱歉，本想溜走，但是出于礼貌，还是向下面喊了一句： “叔，抱歉！是我打扰到您了！” 那个男人戴了个墨镜，一动不动地坐在那里，像是没有听到我的道歉一样。 我瞟了一眼他旁边的桶，里面的水混浊不堪，好像还漂着一点奇怪的颜色。 既已道歉，也不管他有没有听到罢。下午还要上课，我只得匆忙往回赶。只是回去的路上看到这些一动不动的钓鱼人，感觉心里有些不太舒服。风带起的波浪拍打岸边，声音也变得粘腻起来。 再次向桥下看密密麻麻的水草，不知为何，我心中的压力不减反增。 总的来说，是一次失败的散步经历。 下午回到宿舍，本想和室友一起看剧，但当我坐到她旁边时，室友却转过头来闻了闻我身上，然后捏住了鼻子。 “你身上怎么一股鱼腥味？去吃什么重口的东西了？” 我连忙闻了闻自己，只闻到了衣服上残留的洗衣液味道，怎么会有鱼腥味？我说她鼻子出了问题。但其他室友回来之后，也纷纷同意我身上散发着一股鱼腥味。 我觉得奇怪，又使劲闻了闻，还是没有闻到他们所说的味道。我也不是个不讲卫生的人，几乎天天洗澡，怎么会有怪味？我想是不是生了什么病，可是把全身上下都检查了一遍之后，还是没有发现问题。 我只好进去又洗了近乎一个小时的澡，出来后还是得到了同样的答案。 我也没有什么办法，只能怪他们鼻子出了问题，潦草地吐槽了几句就睡下了。 我做了个怪梦，梦见河里的水草都像我涌来，填入我的鼻腔，让我无法呼吸。我竟然感受到了那一团团水草将我包裹，粘腻地贴在我的皮肤上，我甚至闻到了一股极其刺鼻的鱼腥味。 我被憋得无法呼吸，从梦中惊醒，才发现只有凌晨两点多。 夜里是头脑混沌的时候，我想起了白天遇到的那些钓鱼人，脑中似乎有一个意念推着我，让我回去看看，让我现在回去看看。 我的身体似乎不受我的管控，起床，穿好衣服，拿起了平时背的包，带上了宿舍门。我看着我的身体做着这一切，却无法控制自己。我的身体直接从公寓进出快递的大铁门那里溜了出去。凌晨没有了地铁，我的耳边却隐隐传来地铁的轰鸣声。我就看着我的身体一直在无人的路上走，昏黄的灯光照着我没睡醒的眼睛，我看不太清路，但是身体却像受到指引一般，向着通惠河走去。 距离岸边越来越近，鱼腥味也越来越重。河岸两边没有灯，借着昏暗的月光，我竟然看到了那些人，那些钓鱼的人，依然和白天一样，坐在那里，只是手中都拿着些什么东西，发出了阵阵啃食的声音。 我的身体离岸边越来越近，我看得也越来越清楚。是鱼，他们在吃鱼！他们无神的眼睛盯着河面，嘴上机械地重复着撕咬的动作。而水里的那些水草不知道什么时候爬上了岸，像触手一般，将他们的双腿紧紧缠住。 受到极度惊吓的我似乎收回了一点对身体的控制权，当我拼劲意识往回跑的时候，发现一簇簇绿色的纤细触手从水面伸出，一把勾住了我的脚踝，想将我拖向水里。身体的控制权在一点点恢复，我尝试用手把触手撕开，可那粘腻恶心的手感完全不允许我这样做。我又摸向了包里，想找一些锋利之物隔断它，很可惜，没有刀片之类的东西。 但是我摸到了一把塑料勺子。我想起来，这是当时吃外卖没有用过的勺子。 我用尽全力将塑料勺子掰开，露出锋利的裂口，疯狂地在触手上切割。绿色的汁液裹挟着腐臭的气息从中迸发出来。割断最后一根触手时，触手像弹簧一样倏地弹落进了水里。我才发觉所有钓鱼者都停止了对鱼的撕咬，凸出无神的眼睛都看向了我。 我发疯似的往回跑。向着有明亮灯的方向跑。我发誓我绝对跑到了地铁站才晕过去的。 但是第二天，我是在河岸边被发现的。发现我的人是一个巡查保安，他说当时看到我的时候，我的手上全是血，手里还攥着一条新鲜的鱼。","tags":["随笔"]},{"title":"20240924日报","path":"/2024/09/24/20240924日报/","content":"b24c9c33b86bb0f7bfc01841e3aacc03bfbb03fb433283205b6940bd88e9152427a180485ac1c8148fe05d520ee1a670716035994ad2944ad0d9999750c706131ff4ab84728d9863bd16afe77071c53bddab12ae506b0a37bcc0fd22885edbfc93b71f3c443f99c6eb0a43ca360c6e85179e06018ccb677cddd411dbd8ceb9ebbe6c900bc76d25a3cc44d12c345d3f2e6cd1bc82b2408b00db08839e086cd280 Hey, password is required here.","tags":["日报"],"categories":["我的日报"]},{"title":"Unreal bug之路","path":"/2024/09/24/Unreal-bug之路/","content":"9.24 无法创建项目，编译失败 确实vs工具链，需要下载MSVC v143 - VS 2022 C++ x64/x86 build tools (Latest) Windows 10 SDK（至少 10.0.19041.0 版本）。 下载后编译正常，可以打开项目，但是打开时间有些长，需要几分钟","tags":["game developent","Unreal"]},{"path":"/about/index.html","content":"鲍波波这是个人简介 Baobobo 本科 中传 数字媒体技术 硕士 北邮 计算机学硕 研一在读 一些博客因为某些原因需要密码查看，密码是实验室门牌+导师名字简写 qq: 1091992414 滕王阁序王勃时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。重九日节选"}]